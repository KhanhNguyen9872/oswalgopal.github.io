{"version":3,"sources":["assets/images/pp.jpeg","Components/navbar/navbar.jsx","Components/JumbotronComponent/JumbotronComponent.jsx","Components/AboutMe/AboutMe.jsx","App.js","serviceWorker.js","index.js"],"names":["module","exports","React","Component","JumbotronComponent","TxtType","el","toRotate","period","this","loopNum","txt","tick","isDeleting","prototype","i","length","fullTxt","substring","innerHTML","that","delta","Math","random","setTimeout","window","onload","elements","document","getElementsByClassName","getAttribute","JSON","parse","css","createElement","type","body","appendChild","Jumbotron","className","href","data-period","data-type","AboutMeComponent","src","require","alt","App","id","Boolean","location","hostname","match","ReactDOM","render","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"kGAAAA,EAAOC,QAAU,IAA0B,iC,mRCGEC,IAAMC,U,OCA9BC,G,kBACjB,aAAe,IAAD,sBACV,8CACA,IAAIC,EAAU,SAASC,EAAIC,EAAUC,GACjCC,KAAKF,SAAWA,EAChBE,KAAKH,GAAKA,EACVG,KAAKC,QAAU,EACfD,KAAKD,OAAS,EACdC,KAAKE,IAAM,GACXF,KAAKG,OACLH,KAAKI,YAAa,GATZ,OAWVR,EAAQS,UAAUF,KAAO,WACrB,IAAIG,EAAIN,KAAKC,QAAUD,KAAKF,SAASS,OACjCC,EAAUR,KAAKF,SAASQ,GACxBN,KAAKI,WACLJ,KAAKE,IAAMM,EAAQC,UAAU,EAAGT,KAAKE,IAAIK,OAAS,GAElDP,KAAKE,IAAMM,EAAQC,UAAU,EAAGT,KAAKE,IAAIK,OAAS,GAEtDP,KAAKH,GAAGa,UAAY,sBAAsBV,KAAKE,IAAI,UACnD,IAAIS,EAAOX,KACPY,EAAQ,IAAsB,IAAhBC,KAAKC,SACnBd,KAAKI,aAAcQ,GAAS,GAC3BZ,KAAKI,YAAcJ,KAAKE,MAAQM,EAG1BR,KAAKI,YAA2B,KAAbJ,KAAKE,MAC/BF,KAAKI,YAAa,EAClBJ,KAAKC,UACLW,EAAQ,MALRA,EAAQZ,KAAKD,OACbC,KAAKI,YAAa,GAMtBW,YAAW,WACPJ,EAAKR,SACNS,IAEPI,OAAOC,OAAS,WAEZ,IADA,IAAIC,EAAWC,SAASC,uBAAuB,aACtCd,EAAE,EAAGA,EAAEY,EAASX,OAAQD,IAAK,CAClC,IAAIR,EAAWoB,EAASZ,GAAGe,aAAa,aACpCtB,EAASmB,EAASZ,GAAGe,aAAa,eAClCvB,GACA,IAAIF,EAAQsB,EAASZ,GAAIgB,KAAKC,MAAMzB,GAAWC,GAIvD,IAAIyB,EAAML,SAASM,cAAc,SACjCD,EAAIE,KAAO,WACXF,EAAId,UAAY,wDAChBS,SAASQ,KAAKC,YAAYJ,IAhDpB,E,sEAoDV,OACI,kBAACK,EAAA,EAAD,CAAWC,UAAW,qBAClB,wBAAIA,UAAU,iBAAd,YAEI,mCACA,mCACA,mCACA,mCACA,mCANJ,OAQI,mCACA,mCACA,mCACA,mCACA,oCAEJ,4BACI,uBAAGC,KAAK,GAAGD,UAAU,YAAYE,cAAY,OAC1CC,YAAU,sGAET,0BAAMH,UAAU,WAGxB,uBAAGC,KAAM,WAAYD,UAAW,cAAhC,U,GA5EgCrC,IAAMC,YCDjCwC,G,uLAEb,OACI,yBAAKJ,UAAW,0BACZ,yBAAKA,UAAW,YACZ,wBAAIA,UAAW,eAAf,YAGA,yBAAKA,UAAW,yBACZ,yBAAKA,UAAU,oBACX,yBAAKK,IAAKC,EAAQ,IAAgCC,IAAI,GAAGP,UAAW,eAG5E,yBAAKA,UAAW,mBACZ,uCACa,+CADb,uBAEsB,4EAEtB,kFAEI,yGAFJ,4EAIS,wDAET,4MAKA,4DACkC,uBAAGC,KAAK,IAAR,cADlC,MAIJ,yBAAKD,UAAW,0BACZ,yBAAKA,UAAU,qBACX,yBAAKK,IAAKC,EAAQ,IAAgCC,IAAI,GAAGP,UAAW,qB,GAnClDrC,IAAMC,YCgBrC4C,MAZf,WACE,OACE,yBAAKR,UAAU,OAEb,kBAAC,EAAD,MACA,yBAAKS,GAAI,WACN,kBAAC,EAAD,SCAWC,QACW,cAA7BxB,OAAOyB,SAASC,UAEe,UAA7B1B,OAAOyB,SAASC,UAEhB1B,OAAOyB,SAASC,SAASC,MACvB,2DCZNC,IAASC,OAAO,kBAAC,EAAD,MAAS1B,SAAS2B,eAAe,SD6H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,MAAK,SAAAC,GACjCA,EAAaC,kB","file":"static/js/main.5e6f1819.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/pp.beabd477.jpeg\";","import React from 'react';\nimport Navbar from 'react-bootstrap/Navbar'\nimport Nav from 'react-bootstrap/Nav'\nexport default class NavbarComponent extends React.Component{\n    constructor() {\n        super();\n        document.addEventListener('scroll', this.ScrollListner.bind(this));\n    }\n    ScrollListner(ev) {\n        // console.log(ev);\n        // let scroll =  document.getElementsByClassName('App').scrollTop;\n        // console.log(scroll)\n    }\n    render() {\n        return (\n            <Navbar bg=\"dark\" expand=\"lg\">\n                <Navbar.Brand className={'text-light'}>Gopal Oswal</Navbar.Brand>\n                <Navbar.Toggle aria-controls=\"oswalgopal-navbar\" />\n                <Navbar.Collapse id=\"oswalgopal-navbar\">\n                    <Nav.Link className={'ml-auto text-light'}>About Me</Nav.Link>\n                    <Nav.Link className={'text-light'}>Skills</Nav.Link>\n                    <Nav.Link className={'text-light'}>Projects</Nav.Link>\n                    <Nav.Link className={'text-light'}>Hire me</Nav.Link>\n                </Navbar.Collapse>\n            </Navbar>\n    )\n    }\n}\n","import React from 'react';\nimport Jumbotron from \"react-bootstrap/Jumbotron\";\nimport './JumbotronComponent.css'\nexport default class JumbotronComponent extends React.Component{\n    constructor() {\n        super();\n        var TxtType = function(el, toRotate, period) {\n            this.toRotate = toRotate;\n            this.el = el;\n            this.loopNum = 0;\n            this.period = 2;\n            this.txt = '';\n            this.tick();\n            this.isDeleting = false;\n        };\n        TxtType.prototype.tick = function() {\n            var i = this.loopNum % this.toRotate.length;\n            var fullTxt = this.toRotate[i];\n            if (this.isDeleting) {\n                this.txt = fullTxt.substring(0, this.txt.length - 1);\n            } else {\n                this.txt = fullTxt.substring(0, this.txt.length + 1);\n            }\n            this.el.innerHTML = '<span class=\"wrap\">'+this.txt+'</span>';\n            var that = this;\n            var delta = 200 - Math.random() * 100;\n            if (this.isDeleting) { delta /= 2; }\n            if (!this.isDeleting && this.txt === fullTxt) {\n                delta = this.period;\n                this.isDeleting = true;\n            } else if (this.isDeleting && this.txt === '') {\n                this.isDeleting = false;\n                this.loopNum++;\n                delta = 500;\n            }\n            setTimeout(function() {\n                that.tick();\n            }, delta);\n        };\n        window.onload = function() {\n            var elements = document.getElementsByClassName('typewrite');\n            for (var i=0; i<elements.length; i++) {\n                var toRotate = elements[i].getAttribute('data-type');\n                var period = elements[i].getAttribute('data-period');\n                if (toRotate) {\n                    new TxtType(elements[i], JSON.parse(toRotate), period);\n                }\n            }\n            // INJECT CSS\n            var css = document.createElement(\"style\");\n            css.type = \"text/css\";\n            css.innerHTML = \".typewrite > .wrap { border-right: 0.08em solid #fff}\";\n            document.body.appendChild(css);\n        };\n    }\n    render() {\n        return (\n            <Jumbotron className={'jumbotron_wrapper'}>\n                <h1 className=\"animate seven\">\n                     I am &nbsp;\n                    <span>G</span>\n                    <span>O</span>\n                    <span>P</span>\n                    <span>A</span>\n                    <span>L</span>\n                    &nbsp;\n                    <span>O</span>\n                    <span>S</span>\n                    <span>W</span>\n                    <span>A</span>\n                    <span>L</span>\n                </h1>\n                <h1>\n                    <a href=\"\" className=\"typewrite\" data-period=\"2000\"\n                       data-type='[ \"Full Stack Web Developer\", \"Self Employed Freelancer\", \"Tech Enthusiast\", \"Open Source Lover\" ]'\n                    >\n                        <span className=\"wrap\"></span>\n                    </a>\n                </h1>\n                <a href={'#aboutMe'} className={'down_arrow'}>V</a>\n            </Jumbotron>\n        )\n    }\n}\n\n","import React from 'react';\nimport './Aboutme.css'\nexport default class AboutMeComponent extends React.Component{\n    render() {\n        return (\n            <div className={'container aboutme py-5'}>\n                <div className={'row pt-5'}>\n                    <h1 className={'col-12 py-5'}>\n                        About Me\n                    </h1>\n                    <div className={'col-md-4 col-12 image'}>\n                        <div className=\"my_image_wrapper\">\n                            <img src={require('../../assets/images/pp.jpeg')} alt=\"\" className={'my_image'}/>\n                        </div>\n                    </div>\n                    <div className={'col-md-8 col-12'}>\n                        <p>\n                            Hey I am <strong>Gopal Oswal</strong>.\n                            According to me,  <i> The only source of knowledge is experience.</i>\n                        </p>\n                        <p>\n                            I am a Full Stack Developer , currently working with\n                            <strong> Angular, Ionic, React, React Native, Flutter, Posgresql, Nodejs etc.</strong>\n                            I also know version control system like Git and also experienced in\n                            both <strong> Github and Gitlab.</strong>\n                        </p>\n                        <p>\n                            I love to meet people and interact with them to explore my knowledge.\n                            I am specialized in developing web and\n                            mobile applications for your business and personal requirements.\n                        </p>\n                        <p>\n                            Want to have a coffee with me <a href=\"\">contact me</a>.\n                        </p>\n                    </div>\n                    <div className={'col-md-4 col-12 image2'}>\n                        <div className=\"my_image_wrapper1\">\n                            <img src={require('../../assets/images/pp.jpeg')} alt=\"\" className={'my_image'}/>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}\n","import React from 'react';\nimport './App.css';\nimport NavbarComponent from \"./Components/navbar/navbar\";\nimport JumbotronComponent from \"./Components/JumbotronComponent/JumbotronComponent\";\nimport AboutMeComponent from \"./Components/AboutMe/AboutMe\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      {/*<NavbarComponent />*/}\n      <JumbotronComponent/>\n      <div id={'aboutMe'}>\n         <AboutMeComponent />\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}